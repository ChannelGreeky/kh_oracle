--인라인뷰 예제
SELECT ED.EMP_NAME, ED.DEPT_TITLE FROM
(SELECT EMP_NAME,DEPT_CODE,DEPT_TITLE
FROM EMPLOYEE LEFT JOIN 
DEPARTMENT ON (DEPT_CODE = DEPT_ID)) ED;

--TOP-N분석 예제1
SELECT * FROM (SELECT EMP_NAME, SALARY FROM EMPLOYEE
ORDER BY SALARY DESC) WHERE ROWNUM <= 3;

--TOP-N분석 예제2
SELECT * FROM 
(SELECT EMP_NAME, SALARY*BONUS 
FROM EMPLOYEE ORDER BY SALARY*BONUS)
WHERE ROWNUM <=2;

--WITH 예제
WITH BONUS_RANK AS (SELECT EMP_NAME, SALARY*BONUS 
FROM EMPLOYEE ORDER BY SALARY*BONUS)

SELECT * FROM BONUS_RANK WHERE ROWNUM <=2 ;

--RANK() OVER 예제
SELECT DENSE_RANK() OVER(ORDER BY SALARY DESC) AS "순위", 
EMP_NAME, SALARY FROM EMPLOYEE;

------------------------------------------------------
--DDL - CREATE 예제
DROP TABLE MEMBERTBL;
--컬럼레벨 유니크, 컬럼레벨 기본키
CREATE TABLE MemberTbl(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) NOT NULL UNIQUE,
    MEMBER_PWD VARCHAR2(20) NOT NULL,
    MEMBER_NAME VARCHAR2(20) NOT NULL,
    GENDER VARCHAR2(3) CHECK(GENDER IN ('남','여'))
);

COMMENT ON COLUMN MEMBERTBL.MEMBER_NO IS '회원식별자';
COMMENT ON COLUMN MEMBERTBL.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBERTBL.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBERTBL.MEMBER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBERTBL.GENDER IS '성별';

INSERT INTO MEMBERTBL VALUES (1,'USER11','1234','홍길동','남');
INSERT INTO MEMBERTBL VALUES (2,'USER22','1111','김말똥','남');
INSERT INTO MEMBERTBL VALUES (3,'USER33','2222','고길동','여');
INSERT INTO MEMBERTBL VALUES (4,'USER44','3333','똥똥똥','남');

DELETE FROM MEMBERTBL
WHERE MEMBER_ID = 'USER11';

SELECT * FROM MEMBERTBL;

DROP TABLE BUYTBL;
CREATE TABLE BUYTBL (
    PRODUCT_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20),
    PRODUCT_NAME VARCHAR2(30),
    REG_DATE DATE,
    FOREIGN KEY(MEMBER_ID) REFERENCES MEMBERTBL(MEMBER_ID)
    ON DELETE CASCADE
);

INSERT INTO BUYTBL VALUES (1, 'USER11', '당근', SYSDATE);
SELECT * FROM BUYTBL;
------------------------------------------------------

--서브쿼리이용 테이블만들기 예제
CREATE TABLE EMP_DEPT_TBL AS (
SELECT EMP_ID, EMP_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE LEFT JOIN DEPARTMENT ON
(DEPT_CODE = DEPT_ID));

--제약조건 확인
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'MEMBERTBL';

--COMMENT 확인
SELECT * FROM ALL_COL_COMMENTS
WHERE TABLE_NAME = 'MEMBERTBL';


-------------서브쿼리이용 INSERT---------------
DROP TABLE EMP_DEPT_TBL;

CREATE TABLE EMP_01 (
    EMP_ID NUMBER,
    EXP_NAME VARCHAR2(30),
    DEPT_TITLE VARCHAR2(20));

INSERT INTO EMP_01 
(SELECT E.EMP_ID, E.EMP_NAME, D.DEPT_TITLE
FROM EMPLOYEE E LEFT JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID);

SELECT * FROM EMP_01;

--값은 복사하지 않고 데이터타입과 컬럼만 복사해서 테이블만들기
--WHERE절에 1=0 조건 추가
CREATE TABLE EMP_02 AS 
(SELECT E.EMP_ID, E.EMP_NAME,
E.SALARY, E.EMP_NO, D.DEPT_TITLE,
J.JOB_NAME FROM EMPLOYEE E 
LEFT JOIN DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID)
LEFT JOIN JOB J ON (E.JOB_CODE = J.JOB_CODE)
WHERE 1=0 AND D.DEPT_TITLE IN ('회계관리부', '기술지원부'));

DROP TABLE EMP_02;

INSERT INTO EMP_02
(SELECT E.EMP_ID, E.EMP_NAME,
E.SALARY, E.EMP_NO, D.DEPT_TITLE,
J.JOB_NAME FROM EMPLOYEE E 
LEFT JOIN DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID)
LEFT JOIN JOB J ON (E.JOB_CODE = J.JOB_CODE)
WHERE D.DEPT_TITLE IN ('회계관리부', '기술지원부'));

SELECT * FROM EMP_02;
-----------------------------------------------------
--INSERT ALL 예제
--2개의 테이블에 삽입할 데이터를 모두 EMPLOYEE테이블에서
--추출해서 사용하고 있다 이럴 때 사용하는 것이 바로 INSERT ALL
CREATE TABLE EMP_DEPT_D1 AS
    SELECT EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE
    FROM EMPLOYEE WHERE 1=0;

CREATE TABLE EMP_MANAGER AS
    SELECT EMP_ID, EMP_NAME, MANAGER_ID
    FROM EMPLOYEE WHERE 1=0;

INSERT ALL
INTO EMP_DEPT_D1 VALUES(EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE)
INTO EMP_MANAGER VALUES(EMP_ID, EMP_NAME, MANAGER_ID)
(SELECT EMP_ID, EMP_NAME, DEPT_CODE, HIRE_DATE
,MANAGER_ID
FROM EMPLOYEE WHERE DEPT_CODE IN ('D1'));

SELECT * FROM EMP_DEPT_D1;
SELECT * FROM EMP_MANAGER;

COMMIT;