--Basic SELECT
--(1).CNS 기술대학교의 학과 이름과 계열을 표시하시오. 
--단, 출력 헤더는 "학과 명", "계열"으로 표시하도록 핚다.
SELECT DEPARTMENT_NAME AS "학과 명", CATEGORY AS "계열" 
FROM TB_DEPARTMENT;

--(2). 학과의 학과 정원을 다음과 같은 형태로 화면에 출력핚다
SELECT DEPARTMENT_NAME || '의 '
|| '정원은 ' || CAPACITY || '명 입니다.'
AS "학과별 정원"
FROM TB_DEPARTMENT;

--(3)."국어국문학과" 에 다니는 여학생 중 현재 휴학중인 여학생을 찾아달라는 요청이
--들어왔다. 누구인가? (국문학과의 '학과코드'는 학과 테이블(TB_DEPARTMENT)을 조회해서
--찾아 내도록 하자)
SELECT STUDENT_NAME FROM TB_STUDENT S
JOIN (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '국어국문학과') D
ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE SUBSTR(STUDENT_SSN, 8, 1) = '2'
AND ABSENCE_YN = 'Y';

--(4)
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO IN 
('A513079', 'A513090', 'A513091','A513110', 'A513119');

--(5)
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT WHERE
CAPACITY BETWEEN 20 AND 30;

--(6)
SELECT PROFESSOR_NAME FROM TB_PROFESSOR WHERE
DEPARTMENT_NO IS NULL;

--(7)
SELECT STUDENT_NAME FROM TB_STUDENT WHERE
DEPARTMENT_NO IS NULL;

--(8)
SELECT CLASS_NO FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--(9)
SELECT DISTINCT CATEGORY FROM TB_DEPARTMENT;

--(10)
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002
AND STUDENT_ADDRESS LIKE '%전주%'
AND ABSENCE_YN = 'N';

----Additional SELECT - 함수
--(1)
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "이름", 
TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') AS "입학년도" 
FROM TB_STUDENT WHERE DEPARTMENT_NO = '002'
ORDER BY "입학년도" ASC;

--(2)
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR 
WHERE LENGTH(PROFESSOR_NAME) <> 3;

--(3)
SELECT
PROFESSOR_NAME AS "이름",
EXTRACT(YEAR FROM SYSDATE) - 
DECODE(
SUBSTR(PROFESSOR_SSN, 8,1),
'1' , '19'||SUBSTR(PROFESSOR_SSN,1,2),
'2' , '19'||SUBSTR(PROFESSOR_SSN,1,2),
'20'||SUBSTR(PROFESSOR_SSN,1,2)
) AS "나이"
FROM TB_PROFESSOR
ORDER BY "나이" ASC;

--(4)
SELECT SUBSTR(PROFESSOR_NAME, 2) AS 이름 FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) <> 4;

--(5)
SELECT * FROM TB_STUDENT;
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
WHERE (EXTRACT(YEAR FROM ENTRANCE_DATE) - 
DECODE(SUBSTR(STUDENT_SSN, 8,1),
'1' , '19'||SUBSTR(STUDENT_SSN,1,2),
'2' , '19'||SUBSTR(STUDENT_SSN,1,2),
'20'||SUBSTR(STUDENT_SSN,1,2))) > 19;

--(6)
SELECT TO_CHAR(TO_DATE('20201225'), 'day') FROM DUAL;

--(7)
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS 년,
EXTRACT(MONTH FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS 월,
EXTRACT(DAY FROM TO_DATE('99/10/11', 'YY/MM/DD')) AS 일
FROM DUAL;
SELECT EXTRACT(YEAR FROM TO_DATE('49/10/11', 'YY/MM/DD')) FROM DUAL;
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'RR/MM/DD')) FROM DUAL;
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'RR/MM/DD')) FROM DUAL;

--(8)
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT WHERE
STUDENT_NO NOT LIKE 'A%';

--(9)
SELECT ROUND(AVG(POINT),1)
FROM TB_GRADE WHERE
STUDENT_NO LIKE 'A517178';

--(10)
SELECT DEPARTMENT_NO AS "학과번호", COUNT(*) AS "학생수(명)"
FROM TB_STUDENT GROUP BY DEPARTMENT_NO
ORDER BY "학과번호" ASC;

--(11)
SELECT COUNT(*) FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--(12)
SELECT SUBSTR(TERM_NO,1,4) AS "년도",
ROUND(AVG(POINT),1) AS "년도 별 평점"
FROM TB_GRADE WHERE STUDENT_NO IN('A112113')
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY "년도" ASC;

--(13)
SELECT DEPARTMENT_NO AS "학과코드명",
COUNT(*) AS "휴학생 수"
FROM TB_STUDENT WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO ASC;

--(14)
SELECT STUDENT_NAME AS "동일이름"
, COUNT(*) AS "동명인 수"
FROM TB_STUDENT GROUP BY STUDENT_NAME
HAVING COUNT(*) >= 2;

--(15)
SELECT
NVL(SUBSTR(TERM_NO,1,4), ' ') AS "년도",
NVL(SUBSTR(TERM_NO,5,2), ' ') AS "학기",
ROUND(AVG(POINT),1) AS "평점"
FROM TB_GRADE WHERE STUDENT_NO = 'A112113'
GROUP BY
ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2));

----Additional SELECT - Option
--(1)
SELECT STUDENT_NAME AS "학생 이름",
STUDENT_ADDRESS AS "주소" FROM TB_STUDENT
ORDER BY "학생 이름" ASC;

--(2)
SELECT STUDENT_NAME AS "학생 이름",
STUDENT_SSN AS "주민번호" FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY "주민번호" DESC;

--(3)
SELECT STUDENT_NAME AS "학생 이름",
STUDENT_NO AS "학번",
STUDENT_ADDRESS AS "거주지 주소" FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '경기도%' 
OR STUDENT_ADDRESS LIKE '강원도%')
AND EXTRACT(YEAR FROM ENTRANCE_DATE) BETWEEN 1990 AND 1999;

--(4)
SELECT PROFESSOR_NAME,
PROFESSOR_SSN FROM TB_PROFESSOR
WHERE DEPARTMENT_NO =
(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '법학과');

--(5)
SELECT STUDENT_NO, POINT
FROM TB_GRADE WHERE
TERM_NO = '200402' AND
CLASS_NO = 'C3118100'
ORDER BY POINT DESC ,STUDENT_NO ASC;

--(6)
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S JOIN TB_DEPARTMENT D
ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY S.STUDENT_NAME ASC;

--(7)
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME 
FROM TB_CLASS C JOIN TB_DEPARTMENT D
ON C.DEPARTMENT_NO = D.DEPARTMENT_NO;

--(8)
SELECT C.CLASS_NAME, P.PROFESSOR_NAME 
FROM TB_CLASS C JOIN TB_CLASS_PROFESSOR S
ON C.CLASS_NO = S.CLASS_NO 
JOIN TB_PROFESSOR P
ON S.PROFESSOR_NO = P.PROFESSOR_NO;

--(9)
SELECT * FROM TB_CLASS;
SELECT C.CLASS_NAME, P.PROFESSOR_NAME 
FROM TB_CLASS C JOIN TB_CLASS_PROFESSOR S
ON C.CLASS_NO = S.CLASS_NO 
JOIN TB_PROFESSOR P
ON S.PROFESSOR_NO = P.PROFESSOR_NO
WHERE C.DEPARTMENT_NO IN 
(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
WHERE CATEGORY ='인문사회');

--(10)
SELECT * FROM TB_GRADE;
SELECT S.STUDENT_NO AS "학번",
S.STUDENT_NAME AS "학생이름", 
ROUND(AVG(G.POINT),1) FROM TB_STUDENT S
JOIN TB_GRADE G ON S.STUDENT_NO=G.STUDENT_NO 
WHERE DEPARTMENT_NO = (
SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '음악학과');

SELECT STUDENT_NO AS "학번", S.STUDENT_NAME AS "학생 이름",
ROUND(AVG(POINT),1) AS "전체 평점" FROM TB_GRADE G
JOIN TB_STUDENT S ON
G.STUDENT_NO = S.STUDENT_NO
WHERE STUDENT_NO IN (
SELECT STUDENT_NO FROM TB_STUDENT 
WHERE DEPARTMENT_NO = 
(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME ='음악학과'))
GROUP BY STUDENT_NO;

SELECT G.STUDENT_NO AS "학번", S.STUDENT_NAME AS "학생이름",
ROUND(AVG(G.POINT),1) AS "전체 평점" FROM TB_GRADE G
JOIN TB_STUDENT S
ON G.STUDENT_NO = S.STUDENT_NO
GROUP BY G.STUDENT_NO;
--(11)
--(12)
--(13)
--(14)
--(15)
--(16)
--(17)
--(18)
--(19)
