--집합연산자 UNION 예제
SELECT EMP_NAME, DEPT_CODE, JOB_CODE
FROM EMPLOYEE UNION
SELECT DEPT_ID, DEPT_TITLE, LOCATION_ID
FROM DEPARTMENT;

--집합연산자 INTERSECT 예제
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY 
FROM EMPLOYEE WHERE DEPT_CODE = 'D5'
INTERSECT
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY 
FROM EMPLOYEE WHERE SALARY > 3000000;

--단일행 서브쿼리 예제1
SELECT EMP_NAME FROM EMPLOYEE 
WHERE EMP_ID = 
(SELECT MANAGER_ID FROM EMPLOYEE WHERE EMP_NAME = '전지연');

--단일행 서브쿼리 예제2
SELECT EMP_ID, EMP_NAME, JOB_CODE, SALARY FROM EMPLOYEE
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE) ORDER BY 4;

--단일행 서브쿼리 예제3
SELECT EMP_ID, EMP_NAME, SALARY FROM EMPLOYEE
WHERE SALARY = (SELECT SALARY FROM EMPLOYEE WHERE EMP_NAME='윤은해')
AND EMP_NAME NOT LIKE '윤은해';

--다중행 서브쿼리 예제1
SELECT EMP_NAME, DEPT_CODE FROM EMPLOYEE
WHERE DEPT_CODE IN(SELECT DEPT_CODE FROM EMPLOYEE
WHERE EMP_NAME IN ('송종기', '박나라'));

--다중행 서브쿼리 예제2
SELECT JOB_NAME, EMP_NAME FROM EMPLOYEE E JOIN JOB J ON
E.JOB_CODE = J.JOB_CODE
WHERE SAL_LEVEL IN (SELECT SAL_LEVEL FROM EMPLOYEE 
WHERE EMP_NAME IN ('전지연','차태연'))
AND EMP_NAME NOT IN ('전지연','차태연');

--다중행 서브쿼리 예제3
SELECT E.EMP_NAME, J.JOB_NAME, D.DEPT_TITLE
FROM EMPLOYEE E LEFT JOIN DEPARTMENT D ON E.DEPT_CODE=D.DEPT_ID
JOIN JOB J ON E.JOB_CODE = J.JOB_CODE
WHERE E.JOB_CODE IN
(SELECT JOB_CODE FROM JOB WHERE JOB_NAME NOT IN('부사장','대표'))
ORDER BY JOB_NAME;

--ANY 예제
SELECT EMP_NAME, SALARY FROM EMPLOYEE
WHERE SALARY > ANY(SELECT SALARY FROM EMPLOYEE WHERE JOB_CODE IN ('J3'));

--ALL 예제
--J3를 가진 모든 사원들의 월급보다 많이받는사람
SELECT EMP_NAME, SALARY FROM EMPLOYEE
WHERE SALARY > ALL(SELECT SALARY FROM EMPLOYEE WHERE JOB_CODE IN ('J3'));

--EXITS 예제
SELECT EMP_ID, EMP_NAME, EMP_NO FROM EMPLOYEE
WHERE EXISTS(SELECT 1 FROM EMPLOYEE WHERE EMP_ID = 210);

--다중열 서브쿼리 예제
SELECT EMP_NAME, JOB_CODE, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE WHERE (DEPT_CODE, JOB_CODE) IN 
(SELECT DEPT_CODE, JOB_CODE FROM EMPLOYEE
WHERE ENT_YN = 'Y'
AND SUBSTR(EMP_NO,8,1)=2);

--다중열 서브쿼리 예제2
SELECT EMP_NAME, DEPT_CODE, SALARY, LOCAL_NAME
FROM EMPLOYEE, LOCATION
WHERE (DEPT_CODE, LOCAL_NAME) = (SELECT DEPT_ID, LOCAL_NAME 
FROM DEPARTMENT D JOIN LOCATION L ON D.LOCATION_ID = L.LOCAL_CODE
WHERE DEPT_TITLE LIKE '기술지원부')
AND SALARY = 2000000;

--다중행 다중열 서브쿼리
SELECT EMP_NAME, DEPT_CODE, SALARY, LOCAL_NAME
FROM EMPLOYEE, LOCATION
WHERE (DEPT_CODE, LOCAL_NAME) IN (SELECT DEPT_ID, LOCAL_NAME 
FROM DEPARTMENT D JOIN LOCATION L ON D.LOCATION_ID = L.LOCAL_CODE
WHERE DEPT_TITLE IN ('기술지원부', '해외영업2부'));

--직급별 최소 급여를 받는 직원의
--이름, 사번, 부서코드, 입사일, 연봉 출력
SELECT EMP_NAME, EMP_ID, DEPT_CODE, HIRE_DATE, SALARY*12 
FROM EMPLOYEE WHERE (JOB_CODE,SALARY) IN 
(SELECT JOB_CODE, MIN(SALARY) FROM EMPLOYEE GROUP BY JOB_CODE);
