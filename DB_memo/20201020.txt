@ 데이터 모델링이란?
-> 사용자의 요구조건을 분석하여 데이터를 개념적, 논리적, 물리적 설계로
구조화 하는 것
-> 정리되어 있지 않은 데이터는 정형화된 데이터 형태로 만들 수 있어야 함
-> 분석된 모델을 가지고 실제 데이터베이스를 생성하여 개발 및 관리에 이용

ex) 
고객 왈 : 
	저는 20년째 대기업을 다녔어요
	그런데 결국 퇴사 했어요 그래서 퇴직금으로 
	책 대여업을 시작하고 싶어요 
	책 대여는 일반 사람들이 할꺼구요.. 
	당연히 책을 관리 해야 하고 고객들도 관리 하고 싶어요 
	제 꿈은 책방 사장이니까요

테이블 형태
	- 고객 Table (고객번호, 이름, 전화번호, 주소)
	- 도서 Table (도서번호, 제목, 분류, 출판사, 금액)
	- 대여 Table (대여번호, 대여일, 고객번호, 도서번호, 반납여부)

※ 모델링은 고객의 요구사항을 바탕으로 DB 형태로 바꾸는 작업

@ 데이터 모델링의 3가지 용어
- 엔티티 (Entity)
	-> 업무의 관심 대상이 되는 정보를 갖고 있거나 그에 대한 정보를
	알아야 하는 객체
	-> 속성들의 집합이라고도 함
	ex) DB 개념에서는 Table

- 관계 (Relationship)
	-> 두개 혹은 그 이상의 엔티티들 간의 의미있는 연결
	-> 엔티티와 엔티티가 존재의 형태나 행위로 서로에게 영향을 주는
	형태
	ex) DB 개념에서는 외래키를 통해 테이블이 연결된 상태

- 속성 (Attribute)
	-> 엔티티에서 관리하고자 하는 더이상 분리되지 않는 최소 단위의 
	데이터
	ex) DB 개념에서는 컬럼



@ 개념적 설계
-> 일반적인 정보 데이터를 바탕으로 추상화 하여 데이터의 구조적인 
개념으로 표현 하는 것

ex) ERD (Entity Relationship Diagram) - ER Diagram 이라고도 함
	- 사용자의 요구를 분석하여 그림으로 그려내어 관계를 도출하는
	관계도

@ 논리적 설계
-> 개념적 설계를 바탕으로 DBMS가 만들어 질 수 있는 논리적인 데이터
모델로 표현

@ 물리적 설계
-> 데이터가 저장 될 수 있도록 논리적 데이터 모델을 물리적 설계를 통해
물리적 데이터 구조로 표현

@DAV 툴 쓰는법
1. 일단 논리적으로 모델링 (속성, 테이블, 기본키 등등)
2. 물리적 테이블 편집기에서 PRIMARY KEY, INDEX 이름 맞춰주기
3. 상단의 데이터 탭에 스크립트 생성 (필요한 부분만 체크 후 스크립트 검토 후 저장)
4. developer랑 인코딩 방식이 다르기 때문에 notepad로 인코딩 방식 ANSI로 바꿔준 후 developer에 넣어서 실행